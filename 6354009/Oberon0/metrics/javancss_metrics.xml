<?xml version="1.0"?>
<javancss>
  <date>2011-02-07</date>
  <time>12:01:31</time>
  <packages>
    <package>
      <name>oberon0</name>
      <classes>1</classes>
      <functions>1</functions>
      <ncss>18</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>2</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.declaration</name>
      <classes>3</classes>
      <functions>12</functions>
      <ncss>45</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.exception</name>
      <classes>6</classes>
      <functions>0</functions>
      <ncss>18</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>18</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.expression</name>
      <classes>19</classes>
      <functions>60</functions>
      <ncss>273</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>28</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.identifier</name>
      <classes>4</classes>
      <functions>11</functions>
      <ncss>48</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.module</name>
      <classes>1</classes>
      <functions>27</functions>
      <ncss>123</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>51</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.procedure</name>
      <classes>2</classes>
      <functions>18</functions>
      <ncss>102</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>28</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.program</name>
      <classes>1</classes>
      <functions>9</functions>
      <ncss>68</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>15</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.statement</name>
      <classes>5</classes>
      <functions>10</functions>
      <ncss>94</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>13</single_comment_lines>
      <multi_comment_lines>3</multi_comment_lines>
    </package>
    <package>
      <name>oberon0.type</name>
      <classes>3</classes>
      <functions>24</functions>
      <ncss>116</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>16</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <total>
      <classes>45</classes>
      <functions>172</functions>
      <ncss>905</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>155</single_comment_lines>
      <multi_comment_lines>21</multi_comment_lines>
    </total>
    <table>
      <tr><td>Packages</td><td>Classes</td><td>Functions</td><td>NCSS</td><td>Javadocs</td><td>per</td></tr>
      <tr><td>10.00</td><td>45.00</td><td>172.00</td><td>905.00</td><td>0.00</td><td>Project</td></tr>
      <tr><td></td><td>4.50</td><td>17.20</td><td>90.50</td><td>0.00</td><td>Package</td></tr>
      <tr><td></td><td></td><td>3.82</td><td>20.11</td><td>0.00</td><td>Class</td></tr>
      <tr><td></td><td></td><td></td><td>5.26</td><td>0.00</td><td>Function</td></tr>
    </table>
  </packages>

  <objects>
    <object>
      <name>oberon0.declaration.Constant</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.declaration.TypeDeclaration</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.declaration.Variable</name>
      <ncss>16</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.exception.ExecutionException</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.exception.IncorrectStatementException</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.exception.MissingModuleClosureStatementException</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.exception.MissingProcedureClosureStatementException</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.exception.ProcedureNotFoundException</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.exception.UnknownVariableException</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.AlwaysTrueExpression</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.AndExpression</name>
      <ncss>11</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.ArrayExpression</name>
      <ncss>11</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.DevideExpression</name>
      <ncss>11</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.EqualExpression</name>
      <ncss>13</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.Expression</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.GreaterExpression</name>
      <ncss>13</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.GreaterOrEqualExpression</name>
      <ncss>13</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.IdentifierExpression</name>
      <ncss>11</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.IntegerExpression</name>
      <ncss>13</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.LeftRightExpression</name>
      <ncss>15</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.MinusExpression</name>
      <ncss>11</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.ModuloExpression</name>
      <ncss>11</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.NegationExpression</name>
      <ncss>14</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.NotEqualExpression</name>
      <ncss>13</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.PlusExpression</name>
      <ncss>11</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.SmallerExpression</name>
      <ncss>13</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.SmallerOrEqualExpression</name>
      <ncss>13</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.expression.TimesExpression</name>
      <ncss>11</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.identifier.ArrayIndexSelector</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.identifier.Identifier</name>
      <ncss>14</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.identifier.Selector</name>
      <ncss>13</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.identifier.VariableSelector</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.Main</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.module.Module</name>
      <ncss>107</ncss>
      <functions>27</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.procedure.Parameter</name>
      <ncss>25</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.procedure.Procedure</name>
      <ncss>62</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.program.Program</name>
      <ncss>57</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.statement.AssigmentStatement</name>
      <ncss>9</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.statement.IfStatement</name>
      <ncss>23</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.statement.ProcedureCallStatement</name>
      <ncss>17</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.statement.Statement</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.statement.WhileStatement</name>
      <ncss>15</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.type.ArrayType</name>
      <ncss>60</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.type.IntegerType</name>
      <ncss>26</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oberon0.type.Type</name>
      <ncss>12</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <averages>
      <ncss>16.36</ncss>
      <functions>3.82</functions>
      <classes>0.00</classes>
      <javadocs>0.00</javadocs>
    </averages>
    <ncss>905.00</ncss>
  </objects>

  <functions>
    <function>
      <name>oberon0.declaration.Constant.Constant(String,Expression)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.Constant.getIdentifier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.Constant.getExpression()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.TypeDeclaration.TypeDeclaration(String,Type)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.TypeDeclaration.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.TypeDeclaration.getTypeName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.Variable.Variable(String,Type)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.Variable.getIdentifier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.Variable.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.Variable.assignExpression(Expression,Selector,Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.Variable.getExpression(Selector,Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.declaration.Variable.getNew()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.AlwaysTrueExpression.AlwaysTrueExpression()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.AlwaysTrueExpression.evaluate(Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.AlwaysTrueExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.AndExpression.AndExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.AndExpression.evaluate(Module)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.AndExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.ArrayExpression.ArrayExpression(ArrayType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.ArrayExpression.getArrayType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.ArrayExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.ArrayExpression.evaluate(Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.DevideExpression.DevideExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.DevideExpression.evaluate(Module)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.DevideExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.EqualExpression.EqualExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.EqualExpression.evaluate(Module)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.EqualExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.Expression.evaluate(Module)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.Expression.getType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.GreaterExpression.GreaterExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.GreaterExpression.evaluate(Module)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.GreaterExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.GreaterOrEqualExpression.GreaterOrEqualExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.GreaterOrEqualExpression.evaluate(Module)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.GreaterOrEqualExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IdentifierExpression.IdentifierExpression(Identifier)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IdentifierExpression.getIdentifier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IdentifierExpression.evaluate(Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IdentifierExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IntegerExpression.IntegerExpression(IntegerType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IntegerExpression.getIntegerType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IntegerExpression.getIntegerTypeValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IntegerExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.IntegerExpression.evaluate(Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.LeftRightExpression.LeftRightExpression(Expression,Expression)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.LeftRightExpression.getLeftValue(Module)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.LeftRightExpression.getRightValue(Module)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.MinusExpression.MinusExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.MinusExpression.evaluate(Module)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.MinusExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.ModuloExpression.ModuloExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.ModuloExpression.evaluate(Module)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.ModuloExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.NegationExpression.NegationExpression(Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.NegationExpression.evaluate(Module)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.NegationExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.NotEqualExpression.NotEqualExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.NotEqualExpression.evaluate(Module)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.NotEqualExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.PlusExpression.PlusExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.PlusExpression.evaluate(Module)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.PlusExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.SmallerExpression.SmallerExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.SmallerExpression.evaluate(Module)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.SmallerExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.SmallerOrEqualExpression.SmallerOrEqualExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.SmallerOrEqualExpression.evaluate(Module)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.SmallerOrEqualExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.TimesExpression.TimesExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.TimesExpression.evaluate(Module)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.expression.TimesExpression.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.ArrayIndexSelector.ArrayIndexSelector(Expression)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.ArrayIndexSelector.getIndexExpression()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.Identifier.Identifier(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.Identifier.addSelector(Selector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.Identifier.getIdentifier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.Identifier.getSelector()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.Selector.Selector(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.Selector.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.Selector.addSelector(Selector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.VariableSelector.VariableSelector(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.identifier.VariableSelector.getVariable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.Main.main(String[])</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.Module(String)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getIdentifier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addConstant(Constant)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addConstants(Constant)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getConstantExpression(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addTypeDeclaration(TypeDeclaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addTypeDeclarations(TypeDeclaration)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getTypeDeclaration(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addVariable(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addVariables(Variable)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getVariable(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addProcedure(Procedure)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addProcedures(Procedure)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getProcedure(String)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addStatement(Statement)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.addStatements(Statement)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.setHigherModule(Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.assignExpressionToVariable(Identifier,Expression)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getValueForIdentifier(Identifier)</name>
      <ncss>15</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.start()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.setProgram(Program)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getProgram()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getNewConstants()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getNewTypeDeclarations()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getNewVariables()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getNewProcedures()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.module.Module.getNewStatements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Parameter.Parameter(String,Type,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Parameter.isReferenced()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Parameter.getHigherModuleIdentifier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Parameter.hasHigherModuleIdentifier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Parameter.assignExpression(Expression,Selector,Module)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Parameter.getNew()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.Procedure(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.addParameter(Parameter)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.addParameters(Parameter)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.setParamerterExpressions(Expression)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.getValueForIdentifier(Identifier)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.assignExpressionToVariable(Identifier,Expression)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.getVariable(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.start()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.getParameter(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.passParameterExpressionsToHigherModule()</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.getNew()</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.procedure.Procedure.getNewParameters()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.Program(Module)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.getModule()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.addArguments(String[])</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.start()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.isReservedProcedureCall(String)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.executeReserverdProcedure(String,Expression,Module)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.read(Expression,Module)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.write(Expression,Module)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.program.Program.writeLn(Expression,Module)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.AssigmentStatement.AssigmentStatement(Identifier,Expression)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.AssigmentStatement.execute(Module)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.IfStatement.IfStatement(Expression,Statement)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.IfStatement.addFollowIfStatement(IfStatement)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.IfStatement.execute(Module)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.ProcedureCallStatement.ProcedureCallStatement(String,Expression)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.ProcedureCallStatement.execute(Module)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.Statement.execute(Module)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.WhileStatement.WhileStatement(Expression,Statement)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.statement.WhileStatement.execute(Module)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.ArrayType(Expression,Type)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.ArrayType(Type[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.getValues()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.getExpression(Selector,Module)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.assignExpression(Expression,Selector,Module)</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.getNew()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.getCopy(Module)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.createTypeArray(Module)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.getIndexValueFromSelector(Selector,Module)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.ArrayType.getIntegerValueFromExpression(Expression,Module)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.IntegerType.IntegerType()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.IntegerType.IntegerType(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.IntegerType.IntegerType(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.IntegerType.getCopy(Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.IntegerType.getExpression(Selector,Module)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.IntegerType.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.IntegerType.assignExpression(Expression,Selector,Module)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.IntegerType.getNew()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.Type.Type(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.Type.getTypeName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.Type.getExpression(Selector,Module)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.Type.assignExpression(Expression,Selector,Module)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.Type.getNew()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oberon0.type.Type.getCopy(Module)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function_averages>
      <ncss>3.58</ncss>
      <ccn>1.48</ccn>
      <javadocs>0.00</javadocs>
    </function_averages>
    <ncss>905.00</ncss>
  </functions>
</javancss>
