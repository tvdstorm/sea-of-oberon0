MODULE TestArray;

VAR
	a1: ARRAY (1+1) OF INTEGER;
	a2: ARRAY 100 OF INTEGER;
	a3: ARRAY 10 OF
  			ARRAY 10 OF
    			ARRAY 10 OF BOOLEAN;
    
    PROCEDURE testRef ( i, j: INTEGER; VAR k: INTEGER; l :ARRAY 10 OF BOOLEAN); 
	BEGIN 
		AssertEqualsInt(1, i);
		AssertEqualsInt(2, j);
		AssertEqualsBool(TRUE, k);
		AssertEqualsInt(1, a1[0]);
		AssertEqualsInt(2, a1[1]);
		AssertEqualsInt(42, a2[99]);
		AssertEqualsBool(TRUE, a3[0][4][0]);
		AssertEqualsBool(FALSE, a3[0][0][0]);
		
		i := 3000;
		j := 3000;
		k := FALSE;
		AssertEqualsInt(3000, i);
		AssertEqualsInt(3000, j);
		AssertEqualsBool(FALSE, k);
		AssertEqualsInt(1, a1[0]);
		AssertEqualsInt(2, a1[1]);
		AssertEqualsInt(42, a2[99]);
		AssertEqualsBool(FALSE, a3[0][4][0]);
		AssertEqualsBool(FALSE, a3[0][0][0]);
		
		l[0] := TRUE;
		AssertEqualsBool(TRUE, l[0]);
		AssertEqualsInt(3000, i);
		AssertEqualsInt(3000, j);
		AssertEqualsBool(FALSE, k);
		AssertEqualsInt(1, a1[0]);
		AssertEqualsInt(2, a1[1]);
		AssertEqualsInt(42, a2[99]);
		AssertEqualsBool(FALSE, a3[0][4][0]);
		AssertEqualsBool(FALSE, a3[0][0][0])
		
	END test;
    			
        
BEGIN
	a1[0] := 1;
	AssertEqualsInt(1, a1[0]);
	
	a1[1] := 2;
	AssertEqualsInt(1, a1[0]);
	AssertEqualsInt(2, a1[1]);
	
	a2[99] := 42;
	AssertEqualsInt(1, a1[0]);
	AssertEqualsInt(2, a1[1]);
	AssertEqualsInt(42, a2[99]);
	
	
	a3[0][0][0] := FALSE;
	AssertEqualsInt(1, a1[0]);
	AssertEqualsInt(2, a1[1]);
	AssertEqualsInt(42, a2[99]);
	AssertEqualsBool(FALSE, a3[0][0][0]);
	
	a3[0][ a2[99] DIV 10 ][0] := TRUE; 
	AssertEqualsInt(1, a1[0]);
	AssertEqualsInt(2, a1[1]);
	AssertEqualsInt(42, a2[99]);
	AssertEqualsBool(FALSE, a3[0][0][0]);
	AssertEqualsBool(TRUE, a3[0][4][0]);
	
	
	a3[9][9][9] := FALSE;
	AssertEqualsInt(1, a1[0]);
	AssertEqualsInt(2, a1[1]);
	AssertEqualsInt(42, a2[99]);
	AssertEqualsBool(FALSE, a3[0][0][0]);
	AssertEqualsBool(TRUE, a3[0][4][0]);
	
	testRef(a1[0], a1[1], a3[0][4][0], a3[0][4]);
	AssertEqualsInt(1, a1[0]);
	AssertEqualsInt(2, a1[1]);
	AssertEqualsInt(42, a2[99]);
	AssertEqualsBool(FALSE, a3[0][0][0]);
	AssertEqualsBool(FALSE, a3[0][4][0]) 
	

END TestArray.

