MODULE testmodule;

CONST
  INPUTLENGTH = 5;

VAR
  x,y: INTEGER;
  input: ARRAY INPUTLENGTH OF INTEGER;

PROCEDURE SwapSum(VAR i,j: INTEGER; sum, nofSwaps: INTEGER);
 VAR 
	counter: INTEGER;
 
  PROCEDURE Swap(VAR xx, yy: INTEGER);
  VAR
    temp: INTEGER;
  BEGIN
    temp := xx;
    xx := yy;
    yy := temp
  END Swap;

BEGIN
  j := j + sum;
  WHILE counter < nofSwaps DO
   Swap(i, j);
   counter := counter +1
  END;
  i := i + sum;
END SwapSum;

BEGIN
  x:=0;
 WHILE x < INPUTLENGTH DO
   input[x] := x + 1 * 2;
   Write(input[x]);
   WriteLn;
   x := x +1
 END;
 WriteLn;
 x := 10;
 y := 5;
 Write(x);
  WriteLn;
  Write(y);
  WriteLn;
  WriteLn;
 SwapSum(x, y, 1, 2);
  Write(x);
  WriteLn;
  Write(y);
  WriteLn;
  WriteLn;
  SwapSum(x, y, 1, 3);
  Write(x);
  WriteLn;
  Write(y);
  WriteLn;

END testmodule.