<?xml version="1.0"?>
<javancss>
  <date>2011-01-30</date>
  <time>21:24:12</time>
  <packages>
    <package>
      <name>ar.oberon0.interpreter</name>
      <classes>5</classes>
      <functions>14</functions>
      <ncss>86</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>6</single_comment_lines>
      <multi_comment_lines>79</multi_comment_lines>
    </package>
    <package>
      <name>ar.oberon0.interpreter.ControlFlow</name>
      <classes>5</classes>
      <functions>19</functions>
      <ncss>98</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>130</multi_comment_lines>
    </package>
    <package>
      <name>ar.oberon0.interpreter.DataTypes</name>
      <classes>7</classes>
      <functions>41</functions>
      <ncss>136</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>8</single_comment_lines>
      <multi_comment_lines>219</multi_comment_lines>
    </package>
    <package>
      <name>ar.oberon0.interpreter.Lists</name>
      <classes>9</classes>
      <functions>22</functions>
      <ncss>89</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>104</multi_comment_lines>
    </package>
    <package>
      <name>ar.oberon0.interpreter.Memory</name>
      <classes>5</classes>
      <functions>28</functions>
      <ncss>155</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>161</multi_comment_lines>
    </package>
    <package>
      <name>ar.oberon0.interpreter.Operators</name>
      <classes>16</classes>
      <functions>35</functions>
      <ncss>177</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>4</single_comment_lines>
      <multi_comment_lines>7</multi_comment_lines>
    </package>
    <package>
      <name>ar.oberon0.interpreter.Procedure</name>
      <classes>4</classes>
      <functions>19</functions>
      <ncss>106</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>4</single_comment_lines>
      <multi_comment_lines>39</multi_comment_lines>
    </package>
    <total>
      <classes>51</classes>
      <functions>178</functions>
      <ncss>847</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>24</single_comment_lines>
      <multi_comment_lines>739</multi_comment_lines>
    </total>
    <table>
      <tr><td>Packages</td><td>Classes</td><td>Functions</td><td>NCSS</td><td>Javadocs</td><td>per</td></tr>
      <tr><td>7.00</td><td>51.00</td><td>178.00</td><td>847.00</td><td>0.00</td><td>Project</td></tr>
      <tr><td></td><td>7.29</td><td>25.43</td><td>121.00</td><td>0.00</td><td>Package</td></tr>
      <tr><td></td><td></td><td>3.49</td><td>16.61</td><td>0.00</td><td>Class</td></tr>
      <tr><td></td><td></td><td></td><td>4.76</td><td>0.00</td><td>Function</td></tr>
    </table>
  </packages>

  <objects>
    <object>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode</name>
      <ncss>33</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode.IfStatement</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.ControlFlow.ModuleNode</name>
      <ncss>20</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.ControlFlow.StatementSequence</name>
      <ncss>11</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.ControlFlow.WhileNode</name>
      <ncss>10</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.DataTypes.Array</name>
      <ncss>32</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.DataTypes.ArrayType</name>
      <ncss>9</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.DataTypes.CreatableType</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.DataTypes.DataType</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode</name>
      <ncss>47</ncss>
      <functions>15</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.DataTypes.RecordType</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.DataTypes.SimpleType</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Helper</name>
      <ncss>30</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Interpretable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.BaseMap</name>
      <ncss>12</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.ConstantList</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.DataFieldList</name>
      <ncss>12</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.FieldList</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList</name>
      <ncss>20</ncss>
      <functions>5</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList.FormalParameterWithName</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.IdentList</name>
      <ncss>8</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.ProcedureList</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Lists.TypeIdentifierList</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Memory.ArrayItemSelector</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Memory.Context</name>
      <ncss>69</ncss>
      <functions>13</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Memory.DataField</name>
      <ncss>24</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Memory.IdentSelector</name>
      <ncss>15</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Memory.Selector</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.AddNode</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.AndNode</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.AssignmentNode</name>
      <ncss>16</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.BinaryNode</name>
      <ncss>14</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.DivNode</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.EqualNode</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.GreaterNode</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.GreaterOrEqualNode</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.MinNode</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.ModNode</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.MultNode</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.NegationNode</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.NotEqualNode</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.OrNode</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.SmallerNode</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Operators.SmallerOrEqualNode</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Procedure.FormalParameter</name>
      <ncss>9</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Procedure.Procedure</name>
      <ncss>9</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Procedure.ProcedureCallNode</name>
      <ncss>17</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration</name>
      <ncss>45</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.ReadNode</name>
      <ncss>20</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.TechnicalException</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ar.oberon0.interpreter.WriteNode</name>
      <ncss>15</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <averages>
      <ncss>12.73</ncss>
      <functions>3.49</functions>
      <classes>0.06</classes>
      <javadocs>0.00</javadocs>
    </averages>
    <ncss>847.00</ncss>
  </objects>

  <functions>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode.addElseIf(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode.setElse(Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode.IfNode(Interpretable,Interpretable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode.Interpret(Context)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode.IfStatement.IfStatement(Interpretable,Interpretable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode.IfStatement.IsExpressionTrue(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.IfNode.IfStatement.Execute(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.ModuleNode.setConstants(ConstantList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.ModuleNode.setTypeIdentifiers(TypeIdentifierList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.ModuleNode.setVars(DataFieldList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.ModuleNode.setChildProcedures(ProcedureList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.ModuleNode.setStatements(StatementSequence)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.ModuleNode.ModuleNode(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.ModuleNode.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.StatementSequence.StatementSequence(Interpretable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.StatementSequence.Interpret(Context)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.StatementSequence.addStatement(Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.WhileNode.WhileNode(Interpretable,Interpretable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ControlFlow.WhileNode.Interpret(Context)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.Array(IntegerNode,CreatableType)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.InitArray(IntegerNode,CreatableType)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.getDataFieldAt(IntegerNode)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.compareTo(DataType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.MultiplyBy(DataType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.Add(DataType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.Negate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.Subtract(DataType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.Divide(DataType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.Modulo(DataType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.Array.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.ArrayType.ArrayType(Interpretable,CreatableType)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.ArrayType.createInstance(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.CreatableType.createInstance(Context)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.DataType.MultiplyBy(DataType)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.DataType.Add(DataType)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.DataType.Negate()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.DataType.Subtract(DataType)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.DataType.Divide(DataType)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.DataType.Modulo(DataType)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.DataType.getType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.IntegerNode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.IntegerNode(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.equals(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.MultiplyBy(DataType)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.Add(DataType)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.Negate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.Subtract(DataType)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.compareTo(DataType)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.Divide(DataType)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.Modulo(DataType)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.getValueAsInt()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.IntegerNode.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.RecordType.addFieldList(FieldList)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.RecordType.createInstance(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.SimpleType.SimpleType(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.DataTypes.SimpleType.createInstance(Context)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Helper.AreSameType(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Helper.getDataType(Interpretable,Context)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Helper.ConvertToDataField(Interpretable,Context)</name>
      <ncss>14</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Interpretable.Interpret(Context)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.BaseMap.BaseMap()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.BaseMap.AddItem(String,itemType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.BaseMap.getItem(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.BaseMap.getCount()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.BaseMap.iterator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.ConstantList.ConstantList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.DataFieldList.DataFieldList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.DataFieldList.Clone()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.DataFieldList.AddVariables(IdentList,CreatableType)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.FieldList.setIdentList(IdentList,CreatableType)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList.FormalParameterList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList.getCount()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList.AddParameters(IdentList,CreatableType,FormalParameter.Direction)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList.getFormalParameter(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList.getNameOfParameter(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList.FormalParameterWithName.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.FormalParameterList.FormalParameterWithName.FormalParameterWithName(String,CreatableType,Direction)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.IdentList.IdentList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.IdentList.AddIdent(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.IdentList.iterator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.ProcedureList.ProcedureList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Lists.TypeIdentifierList.TypeIdentifierList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.ArrayItemSelector.ArrayItemSelector(Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.ArrayItemSelector.getItem(DataField,Context)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.setParentContext(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.Context()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.setProcedures(ProcedureList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.getProcedure(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.AddConstants(ConstantList)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.AddProcedure(String,ProcedureDeclaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.AddTypeIdentifiers(TypeIdentifierList)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.AddVariables(DataFieldList)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.Clone()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.getTypeIdentifier(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.itemExist(String,BaseMap)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.getVarOrConstantAsDataField(String)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Context.AddVariable(String,DataField)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.DataField.DataField(CreatableType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.DataField.DataField(CreatableType,DataType)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.DataField.getValue(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.DataField.setValue(DataType,Context)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.DataField.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.DataField.IfNotInitInit(Context)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.DataField.Clone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.IdentSelector.IdentSelector(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.IdentSelector.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.IdentSelector.getItem(DataField,Context)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Selector.getNextNode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Selector.setNextNode(Selector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Memory.Selector.getItem(DataField,Context)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.AddNode.AddNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.AddNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.AndNode.AndNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.AndNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.AssignmentNode.Interpret(Context)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.AssignmentNode.AssignmentNode(IdentSelector,Interpretable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.BinaryNode.getLeftExpression()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.BinaryNode.getLeftValue(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.BinaryNode.getRightExpression()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.BinaryNode.getRightValue(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.BinaryNode.BinaryNode(Interpretable,Interpretable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.DivNode.DivNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.DivNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.EqualNode.EqualNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.EqualNode.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.GreaterNode.GreaterNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.GreaterNode.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.GreaterOrEqualNode.GreaterOrEqualNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.GreaterOrEqualNode.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.MinNode.MinNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.MinNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.ModNode.ModNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.ModNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.MultNode.MultNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.MultNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.NegationNode.NegationNode(Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.NegationNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.NotEqualNode.NotEqualNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.NotEqualNode.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.OrNode.OrNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.OrNode.Interpret(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.SmallerNode.SmallerNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.SmallerNode.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.SmallerOrEqualNode.SmallerOrEqualNode(Interpretable,Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Operators.SmallerOrEqualNode.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.FormalParameter.getDirection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.FormalParameter.FormalParameter(CreatableType,Direction)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.Procedure.Procedure(StatementSequence,Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.Procedure.Interpret(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureCallNode.ProcedureCallNode(String,Interpretable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureCallNode.Interpret(Context)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureCallNode.CreateParameterList(Interpretable,Context)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.setFormalParameters(FormalParameterList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.setChildProcedures(ProcedureList)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.setStatementSequence(StatementSequence)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.setVars(DataFieldList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.setTypes(TypeIdentifierList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.setConstants(ConstantList)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.ProcedureDeclaration(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.CheckAndAddActualParametersToContext(DataField,Context)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.IsFormalAndActualParamaterCountSame(FormalParameterList,DataField)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.CountainsFormalParameters()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.CreateProcedure(Context,DataField)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.Procedure.ProcedureDeclaration.getStatementSequence()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ReadNode.ReadNode(IdentSelector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ReadNode.Interpret(Context)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ReadNode.setValueOfDataField(Context,DataField,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ReadNode.getDataFieldToSet(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.ReadNode.GetInputAsInteger()</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.TechnicalException.TechnicalException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.WriteNode.Interpret(Context)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.WriteNode.WriteNode(Interpretable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.WriteNode.AddToMessage(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ar.oberon0.interpreter.WriteNode.WriteNode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function_averages>
      <ncss>2.98</ncss>
      <ccn>1.53</ccn>
      <javadocs>0.00</javadocs>
    </function_averages>
    <ncss>847.00</ncss>
  </functions>
</javancss>
