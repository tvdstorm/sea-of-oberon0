<?xml version="1.0"?>
<javancss>
  <date>2011-02-18</date>
  <time>16:56:08</time>
  <packages>
    <package>
      <name>randy.oberon0.ast</name>
      <classes>1</classes>
      <functions>0</functions>
      <ncss>2</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.ast.datastructures</name>
      <classes>1</classes>
      <functions>3</functions>
      <ncss>15</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.ast.declaration</name>
      <classes>7</classes>
      <functions>19</functions>
      <ncss>177</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>40</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.ast.expression</name>
      <classes>19</classes>
      <functions>38</functions>
      <ncss>312</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>45</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.ast.literal</name>
      <classes>2</classes>
      <functions>4</functions>
      <ncss>26</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>2</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.ast.module</name>
      <classes>1</classes>
      <functions>4</functions>
      <ncss>33</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>4</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.ast.selector</name>
      <classes>4</classes>
      <functions>7</functions>
      <ncss>53</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>6</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.ast.statement</name>
      <classes>6</classes>
      <functions>11</functions>
      <ncss>100</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>16</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.exception</name>
      <classes>19</classes>
      <functions>20</functions>
      <ncss>97</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.interpreter.antlr</name>
      <classes>1</classes>
      <functions>24</functions>
      <ncss>305</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>2</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.interpreter.buildinprocedures</name>
      <classes>5</classes>
      <functions>12</functions>
      <ncss>85</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>15</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.interpreter.runtime</name>
      <classes>2</classes>
      <functions>8</functions>
      <ncss>39</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>7</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.interpreter.runtime.environment</name>
      <classes>11</classes>
      <functions>30</functions>
      <ncss>164</ncss>
      <javadocs>3</javadocs>
      <javadoc_lines>9</javadoc_lines>
      <single_comment_lines>14</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.main</name>
      <classes>1</classes>
      <functions>1</functions>
      <ncss>11</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>randy.oberon0.value</name>
      <classes>6</classes>
      <functions>41</functions>
      <ncss>173</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <total>
      <classes>86</classes>
      <functions>222</functions>
      <ncss>1592</ncss>
      <javadocs>3</javadocs>
      <javadoc_lines>9</javadoc_lines>
      <single_comment_lines>151</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </total>
    <table>
      <tr><td>Packages</td><td>Classes</td><td>Functions</td><td>NCSS</td><td>Javadocs</td><td>per</td></tr>
      <tr><td>15.00</td><td>86.00</td><td>222.00</td><td>1,592.00</td><td>3.00</td><td>Project</td></tr>
      <tr><td></td><td>5.73</td><td>14.80</td><td>106.13</td><td>0.20</td><td>Package</td></tr>
      <tr><td></td><td></td><td>2.58</td><td>18.51</td><td>0.03</td><td>Class</td></tr>
      <tr><td></td><td></td><td></td><td>7.17</td><td>0.01</td><td>Function</td></tr>
    </table>
  </packages>

  <objects>
    <object>
      <name>randy.oberon0.ast.ASTNode</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.datastructures.IfExpressionAndBody</name>
      <ncss>12</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.declaration.AbstractTypeDeclaration</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.declaration.ArrayVarDeclaration</name>
      <ncss>44</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.declaration.BodyDeclaration</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.declaration.ConstDeclaration</name>
      <ncss>12</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.declaration.ProcedureDeclaration</name>
      <ncss>36</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.declaration.RecordDeclaration</name>
      <ncss>12</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.declaration.VarDeclaration</name>
      <ncss>36</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.Expression</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixAdditionExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixAndExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixDivisionExpression</name>
      <ncss>14</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixEqualsExpression</name>
      <ncss>17</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixExpression</name>
      <ncss>12</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixGreaterEqualsExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixGreaterThanExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixModuloExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixMultiplicationExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixNotEqualsExpression</name>
      <ncss>17</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixOrExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixSmallerEqualsExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixSmallerThanExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.InfixSubtractionExpression</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.PrefixExpression</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.PrefixMinExpression</name>
      <ncss>10</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.PrefixNotExpression</name>
      <ncss>10</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.expression.SelectorExpression</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.literal.BooleanLiteral</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.literal.IntegerLiteral</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.module.Module</name>
      <ncss>24</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.selector.ArraySelector</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.selector.DotSelector</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.selector.Selector</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.selector.VariableSelector</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.statement.AssignmentStatement</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.statement.Block</name>
      <ncss>9</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.statement.IfStatement</name>
      <ncss>16</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.statement.ProcedureCall</name>
      <ncss>19</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.statement.Statement</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.ast.statement.WhileStatement</name>
      <ncss>12</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.ArrayLengthMismatch</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.ASTTreeBuildException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.ConstAssignmentException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.DivideByZeroException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.DuplicateProcedureException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.DuplicateTypeException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.DuplicateVariableException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.Exception</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.IncorrectNumberOfArgumentsException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.IOErrorException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.OperatorTypeUndefinedException</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.OutOfBoundsException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.RuntimeException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.TypeMismatchException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.UndefinedBindableException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.UnknownOperatorException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.UnknownRecordFieldAccess</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.UnknownTypeException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.exception.ValueToReferenceConversionException</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator</name>
      <ncss>286</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.buildinprocedures.BuildinProcedures</name>
      <ncss>12</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultReadProcedure</name>
      <ncss>20</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultWriteLnProcedure</name>
      <ncss>8</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultWriteProcedure</name>
      <ncss>11</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.buildinprocedures.IBuildinProcedures</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.ArrayVariableInstantiation</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.ByValue</name>
      <ncss>9</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.Closure</name>
      <ncss>12</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.Constant</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.IBindable</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.IBindableValue</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.IInstantiateableVariable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.PrimitiveVariableInstantiation</name>
      <ncss>12</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.RecordInstantiation</name>
      <ncss>9</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.Reference</name>
      <ncss>12</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment</name>
      <ncss>55</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.IInvokableProcedure</name>
      <ncss>4</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.interpreter.runtime.Program</name>
      <ncss>22</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.main.Main</name>
      <ncss>8</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.value.Array</name>
      <ncss>43</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.value.Boolean</name>
      <ncss>19</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.value.Integer</name>
      <ncss>19</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.value.Record</name>
      <ncss>46</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.value.Type</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>randy.oberon0.value.Value</name>
      <ncss>21</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <averages>
      <ncss>14.48</ncss>
      <functions>2.58</functions>
      <classes>0.00</classes>
      <javadocs>0.03</javadocs>
    </averages>
    <ncss>1,592.00</ncss>
  </objects>

  <functions>
    <function>
      <name>randy.oberon0.ast.datastructures.IfExpressionAndBody.IfExpressionAndBody(Expression,Block)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.datastructures.IfExpressionAndBody.getExpression()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.datastructures.IfExpressionAndBody.getBody()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ArrayVarDeclaration.ArrayVarDeclaration(String,boolean,String,Expression)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ArrayVarDeclaration.register(RuntimeEnvironment)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ArrayVarDeclaration.registerAsParameter(RuntimeEnvironment,IBindableValue)</name>
      <ncss>26</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.BodyDeclaration.register(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ConstDeclaration.ConstDeclaration(String,Expression)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ConstDeclaration.register(RuntimeEnvironment)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ProcedureDeclaration.ProcedureDeclaration(String,VarDeclaration,BodyDeclaration,Block)</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ProcedureDeclaration.register(RuntimeEnvironment)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ProcedureDeclaration.registerTypeDeclarations(RuntimeEnvironment)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ProcedureDeclaration.invoke(RuntimeEnvironment,IBindableValue)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.ProcedureDeclaration.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.RecordDeclaration.RecordDeclaration(String,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.RecordDeclaration.register(RuntimeEnvironment)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.VarDeclaration.VarDeclaration(String,boolean,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.VarDeclaration.register(RuntimeEnvironment)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.VarDeclaration.registerAsParameter(RuntimeEnvironment,IBindableValue)</name>
      <ncss>15</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.VarDeclaration.getTypeName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.VarDeclaration.isReference()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.declaration.VarDeclaration.getVariableNames()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.Expression.evaluate(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixAdditionExpression.InfixAdditionExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixAdditionExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixAndExpression.InfixAndExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixAndExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixDivisionExpression.InfixDivisionExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixDivisionExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixEqualsExpression.InfixEqualsExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixEqualsExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixExpression.InfixExpression(Expression,Expression)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixExpression.getLeftHandExpression()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixExpression.getRightHandExpression()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixGreaterEqualsExpression.InfixGreaterEqualsExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixGreaterEqualsExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixGreaterThanExpression.InfixGreaterThanExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixGreaterThanExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixModuloExpression.InfixModuloExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixModuloExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixMultiplicationExpression.InfixMultiplicationExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixMultiplicationExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixNotEqualsExpression.InfixNotEqualsExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixNotEqualsExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixOrExpression.InfixOrExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixOrExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixSmallerEqualsExpression.InfixSmallerEqualsExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixSmallerEqualsExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixSmallerThanExpression.InfixSmallerThanExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixSmallerThanExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixSubtractionExpression.InfixSubtractionExpression(Expression,Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.InfixSubtractionExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.PrefixExpression.PrefixExpression(Expression)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.PrefixExpression.getRightHandExpression()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.PrefixMinExpression.PrefixMinExpression(Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.PrefixMinExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.PrefixNotExpression.PrefixNotExpression(Expression)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.PrefixNotExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.SelectorExpression.SelectorExpression(Selector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.expression.SelectorExpression.evaluate(RuntimeEnvironment)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.literal.BooleanLiteral.BooleanLiteral(Boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.literal.BooleanLiteral.evaluate(RuntimeEnvironment)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.literal.IntegerLiteral.IntegerLiteral(Integer)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.literal.IntegerLiteral.evaluate(RuntimeEnvironment)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.module.Module.Module(BodyDeclaration,Statement)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.module.Module.registerTypeDeclarations(RuntimeEnvironment)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.module.Module.invoke(RuntimeEnvironment,IBindableValue)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.module.Module.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.selector.ArraySelector.ArraySelector(Selector,Expression)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.selector.ArraySelector.evaluate(RuntimeEnvironment)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.selector.DotSelector.DotSelector(Selector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.selector.DotSelector.evaluate(RuntimeEnvironment)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.selector.Selector.evaluate(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.selector.VariableSelector.VariableSelector(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.selector.VariableSelector.evaluate(RuntimeEnvironment)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.AssignmentStatement.AssignmentStatement(Selector,Expression)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.AssignmentStatement.run(RuntimeEnvironment)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.Block.Block(Statement)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.Block.run(RuntimeEnvironment)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.IfStatement.IfStatement(IfExpressionAndBody,Block)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.IfStatement.run(RuntimeEnvironment)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.ProcedureCall.ProcedureCall(String,Expression)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.ProcedureCall.run(RuntimeEnvironment)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.Statement.run(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.WhileStatement.WhileStatement(Expression,Block)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.ast.statement.WhileStatement.run(RuntimeEnvironment)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.ArrayLengthMismatch.ArrayLengthMismatch()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.ASTTreeBuildException.ASTTreeBuildException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.ConstAssignmentException.ConstAssignmentException()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.DivideByZeroException.DivideByZeroException()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.DuplicateProcedureException.DuplicateProcedureException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.DuplicateTypeException.DuplicateTypeException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.DuplicateVariableException.DuplicateVariableException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.Exception.Exception(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.IncorrectNumberOfArgumentsException.IncorrectNumberOfArgumentsException()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.IOErrorException.IOErrorException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.OperatorTypeUndefinedException.OperatorTypeUndefinedException(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.OperatorTypeUndefinedException.OperatorTypeUndefinedException(String,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.OutOfBoundsException.OutOfBoundsException(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.RuntimeException.RuntimeException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.TypeMismatchException.TypeMismatchException(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.UndefinedBindableException.UndefinedBindableException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.UnknownOperatorException.UnknownOperatorException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.UnknownRecordFieldAccess.UnknownRecordFieldAccess(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.UnknownTypeException.UnknownTypeException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.exception.ValueToReferenceConversionException.ValueToReferenceConversionException()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildASTTreeFromFile(String)</name>
      <ncss>13</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildAbstractTypeDeclaration(Tree)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildArraySelector(Tree)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildAssignmentStatement(Tree)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildASTTree(Tree)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildBlock(Tree)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildBodyDeclaration(Tree)</name>
      <ncss>12</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildBooleanLiteral(Tree)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildConstDeclaration(Tree)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildDotSelector(Tree)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildExpression(Tree)</name>
      <ncss>34</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildIfStatement(Tree)</name>
      <ncss>19</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildInfixExpression(Tree)</name>
      <ncss>33</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildIntegerLiteral(Tree)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildModule(Tree)</name>
      <ncss>21</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildPrefixExpression(Tree)</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildProcedureCall(Tree)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildProcedureDeclaration(Tree)</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildRecordDeclaration(Tree)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildSelector(Tree)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildStatement(Tree)</name>
      <ncss>12</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildVarDeclaration(Tree)</name>
      <ncss>22</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildVariableSelector(Tree)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.antlr.Oberon0ASTTreeGenerator.buildWhileStatement(Tree)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.BuildinProcedures.BuildinProcedures()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.BuildinProcedures.register(RuntimeEnvironment)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultReadProcedure.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultReadProcedure.invoke(RuntimeEnvironment,IBindableValue)</name>
      <ncss>16</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultReadProcedure.registerTypeDeclarations(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultWriteLnProcedure.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultWriteLnProcedure.invoke(RuntimeEnvironment,IBindableValue)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultWriteLnProcedure.registerTypeDeclarations(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultWriteProcedure.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultWriteProcedure.invoke(RuntimeEnvironment,IBindableValue)</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.DefaultWriteProcedure.registerTypeDeclarations(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.buildinprocedures.IBuildinProcedures.register(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.ArrayVariableInstantiation.ArrayVariableInstantiation(IInstantiateableVariable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.ArrayVariableInstantiation.setLength(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.ArrayVariableInstantiation.instantiate(RuntimeEnvironment)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.ByValue.ByValue(Value)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.ByValue.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.ByValue.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Closure.Closure(IInvokableProcedure,RuntimeEnvironment)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Closure.getProcedure()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Closure.getEnvironment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Constant.Constant(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Constant.setValue(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.IBindableValue.getValue()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.IInstantiateableVariable.instantiate(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.PrimitiveVariableInstantiation.PrimitiveVariableInstantiation(Type)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.PrimitiveVariableInstantiation.instantiate(RuntimeEnvironment)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RecordInstantiation.RecordInstantiation(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RecordInstantiation.instantiate(RuntimeEnvironment)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Reference.Reference(Value)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Reference.setValue(Value)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Reference.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.Reference.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.RuntimeEnvironment()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.RuntimeEnvironment(RuntimeEnvironment)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.lookup(String)</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.registerVariableByValue(String,Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.registerVariableByReference(String,Reference)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.registerConstant(String,Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.registerProcedure(String,IInvokableProcedure)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.registerType(String,IInstantiateableVariable)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.environment.RuntimeEnvironment.resolveType(String)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.IInvokableProcedure.getName()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.IInvokableProcedure.invoke(RuntimeEnvironment,IBindableValue)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.IInvokableProcedure.registerTypeDeclarations(RuntimeEnvironment)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.Program.Program()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.Program.loadProgram(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.Program.loadProgram(String,IBuildinProcedures)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.Program.run()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.interpreter.runtime.Program.setBuildinProcedures(IBuildinProcedures)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.main.Main.main(String[])</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.Array(int,IInstantiateableVariable,RuntimeEnvironment)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.Array(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.getIndexValue(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.setValue(Value)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.getLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.toString()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.equalsToValue(Value)</name>
      <ncss>10</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Array.clone()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Boolean.Boolean(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Boolean.getBoolValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Boolean.setValue(Value)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Boolean.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Boolean.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Boolean.equalsToValue(Value)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Boolean.clone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Integer.Integer(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Integer.getIntValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Integer.setValue(Value)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Integer.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Integer.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Integer.equalsToValue(Value)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Integer.clone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Record.Record(IInstantiateableVariable,RuntimeEnvironment)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Record.Record()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Record.getMemberValue(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Record.setValue(Value)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Record.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Record.toString()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Record.equalsToValue(Value)</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Record.clone()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Type.Type(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Type.getTypeText()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Value.setValue(Value)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Value.getType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Value.clone()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Value.castToInteger()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Value.castToBoolean()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Value.castToArray()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Value.castToRecord()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>randy.oberon0.value.Value.equalsToValue(Value)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function_averages>
      <ncss>4.87</ncss>
      <ccn>2.46</ccn>
      <javadocs>0.01</javadocs>
    </function_averages>
    <ncss>1,592.00</ncss>
  </functions>
</javancss>
