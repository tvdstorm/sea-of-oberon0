/* This file was generated by SableCC (http://www.sablecc.org/). */

package oberon.node;

import oberon.analysis.*;

@SuppressWarnings("nls")
public final class AProgram extends PProgram
{
    private TModuletxt _moduletxt_;
    private TIdentifier _beginid_;
    private TSemi _semi_;
    private PDeclarations _declarations_;
    private PBegstat _begstat_;
    private TEndtxt _endtxt_;
    private TIdentifier _endid_;
    private TDot _dot_;

    public AProgram()
    {
        // Constructor
    }

    public AProgram(
        @SuppressWarnings("hiding") TModuletxt _moduletxt_,
        @SuppressWarnings("hiding") TIdentifier _beginid_,
        @SuppressWarnings("hiding") TSemi _semi_,
        @SuppressWarnings("hiding") PDeclarations _declarations_,
        @SuppressWarnings("hiding") PBegstat _begstat_,
        @SuppressWarnings("hiding") TEndtxt _endtxt_,
        @SuppressWarnings("hiding") TIdentifier _endid_,
        @SuppressWarnings("hiding") TDot _dot_)
    {
        // Constructor
        setModuletxt(_moduletxt_);

        setBeginid(_beginid_);

        setSemi(_semi_);

        setDeclarations(_declarations_);

        setBegstat(_begstat_);

        setEndtxt(_endtxt_);

        setEndid(_endid_);

        setDot(_dot_);

    }

    @Override
    public Object clone()
    {
        return new AProgram(
            cloneNode(this._moduletxt_),
            cloneNode(this._beginid_),
            cloneNode(this._semi_),
            cloneNode(this._declarations_),
            cloneNode(this._begstat_),
            cloneNode(this._endtxt_),
            cloneNode(this._endid_),
            cloneNode(this._dot_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProgram(this);
    }

    public TModuletxt getModuletxt()
    {
        return this._moduletxt_;
    }

    public void setModuletxt(TModuletxt node)
    {
        if(this._moduletxt_ != null)
        {
            this._moduletxt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._moduletxt_ = node;
    }

    public TIdentifier getBeginid()
    {
        return this._beginid_;
    }

    public void setBeginid(TIdentifier node)
    {
        if(this._beginid_ != null)
        {
            this._beginid_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._beginid_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    public PDeclarations getDeclarations()
    {
        return this._declarations_;
    }

    public void setDeclarations(PDeclarations node)
    {
        if(this._declarations_ != null)
        {
            this._declarations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declarations_ = node;
    }

    public PBegstat getBegstat()
    {
        return this._begstat_;
    }

    public void setBegstat(PBegstat node)
    {
        if(this._begstat_ != null)
        {
            this._begstat_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._begstat_ = node;
    }

    public TEndtxt getEndtxt()
    {
        return this._endtxt_;
    }

    public void setEndtxt(TEndtxt node)
    {
        if(this._endtxt_ != null)
        {
            this._endtxt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._endtxt_ = node;
    }

    public TIdentifier getEndid()
    {
        return this._endid_;
    }

    public void setEndid(TIdentifier node)
    {
        if(this._endid_ != null)
        {
            this._endid_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._endid_ = node;
    }

    public TDot getDot()
    {
        return this._dot_;
    }

    public void setDot(TDot node)
    {
        if(this._dot_ != null)
        {
            this._dot_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dot_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._moduletxt_)
            + toString(this._beginid_)
            + toString(this._semi_)
            + toString(this._declarations_)
            + toString(this._begstat_)
            + toString(this._endtxt_)
            + toString(this._endid_)
            + toString(this._dot_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._moduletxt_ == child)
        {
            this._moduletxt_ = null;
            return;
        }

        if(this._beginid_ == child)
        {
            this._beginid_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        if(this._declarations_ == child)
        {
            this._declarations_ = null;
            return;
        }

        if(this._begstat_ == child)
        {
            this._begstat_ = null;
            return;
        }

        if(this._endtxt_ == child)
        {
            this._endtxt_ = null;
            return;
        }

        if(this._endid_ == child)
        {
            this._endid_ = null;
            return;
        }

        if(this._dot_ == child)
        {
            this._dot_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._moduletxt_ == oldChild)
        {
            setModuletxt((TModuletxt) newChild);
            return;
        }

        if(this._beginid_ == oldChild)
        {
            setBeginid((TIdentifier) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        if(this._declarations_ == oldChild)
        {
            setDeclarations((PDeclarations) newChild);
            return;
        }

        if(this._begstat_ == oldChild)
        {
            setBegstat((PBegstat) newChild);
            return;
        }

        if(this._endtxt_ == oldChild)
        {
            setEndtxt((TEndtxt) newChild);
            return;
        }

        if(this._endid_ == oldChild)
        {
            setEndid((TIdentifier) newChild);
            return;
        }

        if(this._dot_ == oldChild)
        {
            setDot((TDot) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
