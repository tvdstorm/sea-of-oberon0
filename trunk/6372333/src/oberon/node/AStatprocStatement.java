/* This file was generated by SableCC (http://www.sablecc.org/). */

package oberon.node;

import oberon.analysis.*;

@SuppressWarnings("nls")
public final class AStatprocStatement extends PStatement
{
    private PProcedurecall _procedurecall_;

    public AStatprocStatement()
    {
        // Constructor
    }

    public AStatprocStatement(
        @SuppressWarnings("hiding") PProcedurecall _procedurecall_)
    {
        // Constructor
        setProcedurecall(_procedurecall_);

    }

    @Override
    public Object clone()
    {
        return new AStatprocStatement(
            cloneNode(this._procedurecall_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStatprocStatement(this);
    }

    public PProcedurecall getProcedurecall()
    {
        return this._procedurecall_;
    }

    public void setProcedurecall(PProcedurecall node)
    {
        if(this._procedurecall_ != null)
        {
            this._procedurecall_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._procedurecall_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._procedurecall_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._procedurecall_ == child)
        {
            this._procedurecall_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._procedurecall_ == oldChild)
        {
            setProcedurecall((PProcedurecall) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
