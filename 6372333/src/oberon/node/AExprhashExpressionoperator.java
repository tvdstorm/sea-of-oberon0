/* This file was generated by SableCC (http://www.sablecc.org/). */

package oberon.node;

import oberon.analysis.*;

@SuppressWarnings("nls")
public final class AExprhashExpressionoperator extends PExpressionoperator
{
    private TExha _exha_;

    public AExprhashExpressionoperator()
    {
        // Constructor
    }

    public AExprhashExpressionoperator(
        @SuppressWarnings("hiding") TExha _exha_)
    {
        // Constructor
        setExha(_exha_);

    }

    @Override
    public Object clone()
    {
        return new AExprhashExpressionoperator(
            cloneNode(this._exha_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExprhashExpressionoperator(this);
    }

    public TExha getExha()
    {
        return this._exha_;
    }

    public void setExha(TExha node)
    {
        if(this._exha_ != null)
        {
            this._exha_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exha_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exha_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exha_ == child)
        {
            this._exha_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exha_ == oldChild)
        {
            setExha((TExha) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
